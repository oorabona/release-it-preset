name: Republish (EXCEPTIONAL)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to republish (e.g., 1.2.3)'
        required: true
        type: string
      confirmation:
        description: 'Type "I understand the risks" to confirm'
        required: true
        type: string

permissions:
  contents: write
  id-token: write

concurrency:
  group: republish-${{ inputs.version }}
  cancel-in-progress: false

jobs:
  pre-flight-checks:
    name: Pre-flight Safety Checks
    runs-on: ubuntu-latest

    steps:
      - name: Validate confirmation phrase
        run: |
          if [ "${{ inputs.confirmation }}" != "I understand the risks" ]; then
            echo "‚ùå Invalid confirmation phrase"
            echo "Expected: 'I understand the risks'"
            echo "Got: '${{ inputs.confirmation }}'"
            exit 1
          fi
          echo "‚úÖ Confirmation phrase validated"

      - name: Validate version format
        run: |
          if ! echo "${{ inputs.version }}" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$'; then
            echo "‚ùå Invalid version format: ${{ inputs.version }}"
            echo "Expected format: X.Y.Z or X.Y.Z-prerelease"
            exit 1
          fi
          echo "‚úÖ Version format is valid"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag exists
        run: |
          TAG="v${{ inputs.version }}"
          if ! git rev-parse $TAG >/dev/null 2>&1; then
            echo "‚ùå Tag $TAG does not exist"
            echo "Available tags:"
            git tag --sort=-v:refname | head -10
            exit 1
          fi
          echo "‚úÖ Tag $TAG exists"

      - name: Display republish warning
        run: |
          echo "‚ö†Ô∏è  =============================================="
          echo "‚ö†Ô∏è  EXCEPTIONAL REPUBLISH OPERATION"
          echo "‚ö†Ô∏è  =============================================="
          echo ""
          echo "üî¥ This will MOVE the existing git tag v${{ inputs.version }}"
          echo "üî¥ This BREAKS semantic versioning immutability"
          echo "üî¥ This should ONLY be used for critical fixes"
          echo ""
          echo "What will happen:"
          echo "  1. Move tag v${{ inputs.version }} to current commit"
          echo "  2. Update CHANGELOG.md for this version"
          echo "  3. Republish to npm"
          echo "  4. Update GitHub Release"
          echo "  5. Create audit trail document"
          echo ""
          echo "‚è∞ Starting in 10 seconds..."
          sleep 10
          echo "‚úÖ Proceeding with republish operation"

  build-dist:
    name: Build Dist Artifact
    needs: pre-flight-checks
    uses: ./.github/workflows/build-dist.yml
    with:
      artifact_name: dist-build

  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    needs: [pre-flight-checks, build-dist]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check TypeScript compilation
        run: pnpm tsc --noEmit

  republish:
    name: Republish Version
    runs-on: ubuntu-latest
    needs: [validate, build-dist]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Configure npm authentication
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-dist.outputs.artifact_name }}
          path: dist

      - name: Republish with release-it-preset
        run: pnpm release-it-preset republish --ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_PUBLISH: 'true'
          GITHUB_RELEASE: 'true'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create audit trail
        run: |
          cat > REPUBLISH_AUDIT_${{ inputs.version }}.md << 'EOF'
          # Republish Audit Trail

          **Version**: ${{ inputs.version }}
          **Date (UTC)**: $(date -u +%Y-%m-%dT%H:%M:%SZ)
          **Triggered by**: @${{ github.actor }}
          **Workflow run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          ## Reason for Republish
          (To be documented in GitHub Release notes)

          ## Verification
          - Old tag commit: $(git rev-parse v${{ inputs.version }}^{} 2>/dev/null || echo "N/A")
          - New tag commit: $(git rev-parse v${{ inputs.version }})
          - npm published: ‚úÖ
          - GitHub Release updated: ‚úÖ

          ## Impact Assessment
          Users who already installed this version may have a different version than newly installed packages.
          EOF

          echo "‚úÖ Audit trail created"
          cat REPUBLISH_AUDIT_${{ inputs.version }}.md

      - name: Display result
        run: |
          echo "‚úÖ Republish operation completed successfully"
          echo ""
          echo "Version: ${{ inputs.version }}"
          echo "Tag: v${{ inputs.version }}"
          echo "npm: Published with provenance"
          echo "GitHub Release: Updated"
          echo ""
          echo "‚ö†Ô∏è  IMPORTANT: Document the reason for this republish in the GitHub Release notes"
