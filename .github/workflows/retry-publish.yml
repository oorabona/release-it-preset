name: Retry Publish

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Git tag to republish (leave empty for latest tag)'
        required: false
        type: string
      npm_only:
        description: 'Publish to npm only (skip GitHub Release)'
        required: false
        type: boolean
        default: false
      github_only:
        description: 'Create GitHub Release only (skip npm)'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write

jobs:
  determine-tag:
    name: Determine Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
      version: ${{ steps.tag.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine tag to publish
        id: tag
        run: |
          if [ -n "${{ inputs.tag_name }}" ]; then
            TAG="${{ inputs.tag_name }}"
          else
            TAG=$(git describe --tags --abbrev=0)
          fi

          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT
          echo "📌 Publishing tag: $TAG"

      - name: Verify tag exists
        run: |
          if ! git rev-parse ${{ steps.tag.outputs.tag }} >/dev/null 2>&1; then
            echo "❌ Tag ${{ steps.tag.outputs.tag }} does not exist"
            exit 1
          fi
          echo "✅ Tag ${{ steps.tag.outputs.tag }} exists"

  build-dist:
    uses: ./.github/workflows/build-dist.yml
    needs: determine-tag
    with:
      artifact_name: dist-build
      ref: ${{ needs.determine-tag.outputs.tag }}

  retry-publish:
    name: Retry Publishing
    runs-on: ubuntu-latest
    needs: [determine-tag, build-dist]

    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.determine-tag.outputs.tag }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Configure npm authentication
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-dist.outputs.artifact_name }}
          path: dist

      - name: Show current commit
        run: |
          echo "Current commit: $(git rev-parse HEAD)"

      - name: Run pre-flight checks
        run: node dist/scripts/retry-publish.js

      - name: Retry publish with release-it-preset
        run: |
          if [ "${{ inputs.github_only }}" == "true" ]; then
            export NPM_PUBLISH=false
          else
            export NPM_PUBLISH=true
          fi

          if [ "${{ inputs.npm_only }}" == "true" ]; then
            export GITHUB_RELEASE=false
          else
            export GITHUB_RELEASE=true
          fi

          pnpm release-it-preset retry-publish --ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Display result
        run: |
          echo "✅ Retry publish completed"
          echo "Tag: ${{ needs.determine-tag.outputs.tag }}"
          echo "Version: ${{ needs.determine-tag.outputs.version }}"
          echo ""
          if [ "${{ inputs.npm_only }}" == "true" ]; then
            echo "📦 Published to npm only"
          elif [ "${{ inputs.github_only }}" == "true" ]; then
            echo "🏷️  Created GitHub Release only"
          else
            echo "📦 Published to npm"
            echo "🏷️  Created GitHub Release"
          fi
